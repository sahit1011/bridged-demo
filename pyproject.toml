[project]
name = "bridged-demo"
version = "0.1.0"
description = "Natural Language to Pinecone Query Agent - AI Hire Task"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "flask>=3.0.0",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "pinecone>=7.0.0",
    "pandas>=2.1.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "numpy>=1.24.0,<2.0.0",
    "sentence-transformers>=2.2.2",
    "torch>=2.0.0",
    "python-multipart>=0.0.6",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
]
test = [
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.poetry]
name = "bridged-demo"
version = "0.1.0"
description = "Natural Language to Pinecone Query Agent - AI Hire Task"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
fastapi = ">=0.104.1"
uvicorn = {extras = ["standard"], version = ">=0.24.0"}
flask = ">=3.0.0"
openai = ">=1.3.0"
anthropic = ">=0.7.0"
pinecone = ">=7.0.0"
pandas = ">=2.1.0"
pydantic = ">=2.5.0"
python-dotenv = ">=1.0.0"
httpx = ">=0.25.0"
python-dateutil = ">=2.8.2"
pytz = ">=2023.3"
numpy = ">=1.24.0,<2.0.0"
sentence-transformers = ">=2.2.2"
torch = ">=2.0.0"
python-multipart = ">=0.0.6"
requests = ">=2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
pytest-asyncio = ">=0.21.0"
black = ">=23.0.0"
flake8 = ">=6.0.0"
mypy = ">=1.7.0"
isort = ">=5.12.0"
pre-commit = ">=3.5.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.12.0"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pinecone.*",
    "langchain.*",
    "anthropic.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
